import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:lucide_icons_flutter/lucide_icons.dart';
import 'package:user_app/controllers/food_controller.dart';
import 'package:user_app/helpers/appbar.dart';
import 'package:user_app/helpers/custom_text.dart';
import 'package:user_app/helpers/reusable_container.dart';
import 'package:user_app/models/food_item_model.dart';
import 'package:user_app/utils/appcolors.dart';
import 'package:user_app/utils/toast.dart';
import 'package:user_app/views/home/checkout.dart';

class AddToCartScreen extends StatefulWidget {
  const AddToCartScreen({super.key});

  @override
  State<AddToCartScreen> createState() => _AddToCartScreenState();
}

class _AddToCartScreenState extends State<AddToCartScreen> {
  final MyFoodController _controller = Get.find<MyFoodController>();

  @override
  Widget build(BuildContext context) {
    return SafeArea(
      child: Scaffold(
        appBar: const CustomAppbar(title: 'My Cart', showBackArrow: true),
        body: Padding(
          padding: const EdgeInsets.all(8.0),
          child: Obx(
            () => _controller.cartItems.isEmpty
                ? Center(
                    child: Image.asset(
                    'assets/images/empty_cart.png',
                    height: context.height * 0.45,
                  ))
                : ListView.builder(
                    itemCount: _controller.cartItems.length,
                    itemBuilder: (context, index) {
                      final cartItem = _controller.cartItems[index];
                      return InkWell(
                        // onTap: () =>
                        //     Get.to(() => ProductDetailScreen(model: cartItem)),
                        child: CustomAddToCartWidget(model: cartItem),
                      );
                    },
                  ),
          ),
        ),
        bottomNavigationBar: Column(
          mainAxisSize: MainAxisSize.min,
          children: [
            Padding(
              padding: EdgeInsets.symmetric(horizontal: context.width * 0.06),
              child: Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  const CustomTextWidget(
                    text: 'Total:',
                    fontSize: 16.0,
                    fontWeight: FontWeight.w400,
                  ),
                  Obx(
                    () => CustomTextWidget(
                      text:
                          _controller.calculateTotalPrice().toStringAsFixed(2),
                      fontSize: 22.0,
                      fontWeight: FontWeight.w500,
                    ),
                  ),
                ],
              ),
            ),
            InkWell(
              onTap: () {
                if (_controller.cartItems.isNotEmpty) {
                  Get.to(() => const CheckoutScreen(),
                      transition: Transition.rightToLeft);
                } else {
                  MyCustomErrorToast(
                          title: 'Please Add atleast one item to cart')
                      .showToast(context);
                }
              },
              child: const CustomBottomNavigationBarButton(title: 'Checkout'),
            ),
          ],
        ),
      ),
    );
  }
}

class CustomBottomNavigationBarButton extends StatelessWidget {
  final String title;
  final Color? backgroundColor;

  const CustomBottomNavigationBarButton({
    super.key,
    required this.title,
    this.backgroundColor,
  });

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: EdgeInsets.symmetric(horizontal: context.width * 0.06),
      child: ReUsableContainer(
        verticalPadding: context.height * 0.02,
        height: 50,
        color: backgroundColor ?? AppColors.buttonColor.withOpacity(0.9),
        child: Center(
            child: CustomTextWidget(
          text: title,
          fontSize: 16.0,
          textColor: AppColors.whiteTextColor,
          fontWeight: FontWeight.w400,
          textAlign: TextAlign.center,
        )),
      ),
    );
  }
}

class CustomAddToCartWidget extends StatefulWidget {
  final MyFoodItemModel? model;

  const CustomAddToCartWidget({
    super.key,
    this.model,
  });

  @override
  State<CustomAddToCartWidget> createState() => _CustomAddToCartWidgetState();
}

class _CustomAddToCartWidgetState extends State<CustomAddToCartWidget> {
  final MyFoodController _controller = Get.find<MyFoodController>();

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.all(8.0),
      child: Container(
        decoration: BoxDecoration(
          color: Colors.grey.shade300,
          border: Border.all(color: Colors.black12),
          borderRadius: BorderRadius.circular(12.0),
        ),
        child: Row(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Padding(
              padding: const EdgeInsets.all(8.0),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(12.0),
                child: Image.network(
                  '${widget.model?.image}',
                  width: context.width * 0.25,
                  height: context.height * 0.12,
                  fit: BoxFit.cover,
                ),
              ),
            ),
            Expanded(
              child: Padding(
                padding:
                    const EdgeInsets.symmetric(horizontal: 8.0, vertical: 8.0),
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    CustomTextWidget(
                      text: '${widget.model?.name}',
                      fontSize: 16.0,
                      fontWeight: FontWeight.w500,
                      maxLines: 2,
                    ),
                    SizedBox(height: context.height * 0.01),
                    CustomTextWidget(
                      text: '${widget.model?.restaurantName}',
                      fontSize: 14.0,
                      fontWeight: FontWeight.w600,
                      textColor: AppColors.lightTextColor,
                    ),
                    SizedBox(height: context.height * 0.01),
                    Row(
                      mainAxisSize: MainAxisSize.min,
                      children: [
                        InkWell(
                          onTap: () {
                            // Increase quantity
                            _controller.incrementQuantity(widget.model!);
                          },
                          child: const Icon(
                            CupertinoIcons.plus_circle_fill,
                            color: AppColors.buttonColor,
                            size: 24.0,
                          ),
                        ),
                        const SizedBox(width: 8.0),
                        CustomTextWidget(
                          text: '${widget.model?.totalCount}',
                          fontSize: 18.0,
                          fontWeight: FontWeight.w600,
                          textColor: AppColors.blackTextColor,
                        ),
                        const SizedBox(width: 8.0),
                        InkWell(
                          onTap: () {
                            // Increase quantity
                            _controller.decrementQuantity(widget.model!);
                          },
                          child: const Icon(
                            LucideIcons.circleMinus,
                            color: AppColors.buttonColor,
                            size: 24.0,
                          ),
                        ),
                      ],
                    ),
                  ],
                ),
              ),
            ),
            Padding(
              padding: const EdgeInsets.only(top: 8.0, bottom: 8.0, right: 8.0),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.end,
                children: [
                  CustomTextWidget(
                    text:
                        '\$${_controller.calculateItemTotalPrice(widget.model!).toStringAsFixed(2)}',
                    fontSize: 18.0,
                    fontWeight: FontWeight.w600,
                  ),
                  SizedBox(height: context.height * 0.03),
                  IconButton(
                    visualDensity: VisualDensity.compact,
                    onPressed: () {
                      _controller.addOrRemoveFromCart(widget.model);
                    },
                    icon: const Icon(
                      LucideIcons.trash,
                      color: Colors.red,
                    ),
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }
}
